{"version":3,"file":"wavesurfer.js","mappings":"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,GAAAH,IAAA,CAAAI,IAAA,CAAAN,KAAA,EAAAC,IAAA,oBAAA7B,OAAA,CAAAiC,GAAA,uBAAAA,GAAA,YAAAzB,SAAA,4DAAAqB,IAAA,gBAAAF,MAAA,GAAAQ,MAAA,EAAAP,KAAA;AAE3D;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASM6iB,WAAW;EAYb;AACJ;AACA;AACA;AACA;AACA;EACI,SAAAA,YAAYvZ,MAAM,EAAEwZ,EAAE,EAAE;IAAArkB,eAAA,OAAAokB,WAAA;EAAC;EACzB;AACJ;AACA;AACA;AACA;AACA;EALInjB,YAAA,CAAAm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","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement-webaudio.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/absMax.js","webpack://WaveSurfer/./src/util/clamp.js","webpack://WaveSurfer/./src/util/fetch.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/orientation.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/silence-mode.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/before-startup","webpack://WaveSurfer/webpack/startup","webpack://WaveSurfer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, () => {\nreturn ","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     * @param {string|string[]} waveColor Fill color for the wave canvas,\n     * or an array of colors to apply as a gradient\n     * @param {?string|string[]} progressColor Fill color for the progress canvas,\n     * or an array of colors to apply as a gradient\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\n        }\n    }\n\n    /**\n     * Utility function to handle wave color arguments\n     *\n     * When the color argument type is a string or CanvasGradient instance,\n     * it will be returned as is. Otherwise, it will be treated as an array,\n     * and a new CanvasGradient will be returned\n     *\n     * @since 6.0.0\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {string|string[]|CanvasGradient} color Either a single fill color\n     *     for the wave canvas, an existing CanvasGradient instance, or an array\n     *     of colors to apply as a gradient\n     * @returns {string|CanvasGradient} Returns a string fillstyle value, or a\n     *     canvas gradient\n     */\n    getFillStyle(ctx, color) {\n        if (typeof color == 'string' || color instanceof CanvasGradient) {\n            return color;\n        }\n\n        const waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n        color.forEach((value, index) => waveGradient.addColorStop((index / color.length), value));\n\n        return waveGradient;\n    }\n\n    /**\n     * Set the canvas transforms for wave and progress\n     *\n     * @param {boolean} vertical Whether to render vertically\n     */\n    applyCanvasTransforms(vertical) {\n        if (vertical) {\n            // Reflect the waveform across the line y = -x\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\n\n            if (this.hasProgressCanvas) {\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\n            }\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n            Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n\n        this.container = util.withOrientation(container, params.vertical);\n        /**\n         * @type {WavesurferParams}\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = util.withOrientation(\n            this.container.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                cursor: this.params.hideCursor ? 'none' : 'auto',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = util.withOrientation(\n            e.targetTouches ? e.targetTouches[0] : e,\n            this.params.vertical\n        ).clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n        const progressPixels = this.getProgressPixels(bbox, clientX);\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = progressPixels *\n                (this.params.pixelRatio / nominalWidth) || 0;\n        } else {\n            progress = (progressPixels + this.wrapper.scrollLeft) /\n                this.wrapper.scrollWidth || 0;\n        }\n\n        return util.clamp(progress, 0, 1);\n    }\n\n    getProgressPixels(wrapperBbox, clientX) {\n        if (this.params.rtl) {\n            return wrapperBbox.right - clientX;\n        } else {\n            return clientX - wrapperBbox.left;\n        }\n    }\n\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\n            const scrollbarHeight = this.wrapper.offsetHeight -\n                  this.wrapper.clientHeight;\n\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\n            this.style(this.wrapper, {\n                width: newWidth\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container.domElement) {\n                this.container.removeChild(this.wrapper.domElement);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n\n        /**\n         * Whether to render the waveform vertically. Defaults to false.\n         *\n         * @type {boolean}\n         */\n        this.vertical = params.vertical;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     */\n    createElements() {\n        this.progressWave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('wave')),\n            this.params.vertical\n        );\n        this.style(this.progressWave, {\n            position: 'absolute',\n            zIndex: 3,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            overflow: 'hidden',\n            width: '0',\n            display: 'none',\n            boxSizing: 'border-box',\n            borderRightStyle: 'solid',\n            pointerEvents: 'none'\n        });\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        let wave = util.withOrientation(\n            this.wrapper.appendChild(document.createElement('canvas')),\n            this.params.vertical\n        );\n        this.style(wave, {\n            position: 'absolute',\n            zIndex: 2,\n            left: leftOffset + 'px',\n            top: 0,\n            bottom: 0,\n            height: '100%',\n            pointerEvents: 'none'\n        });\n        entry.initWave(wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            let progress = util.withOrientation(\n                this.progressWave.appendChild(document.createElement('canvas')),\n                this.params.vertical\n            );\n            this.style(progress, {\n                position: 'absolute',\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%'\n            });\n            entry.initProgress(progress);\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                            this.params.pixelRatio,\n                            this.params.barGap * this.params.pixelRatio\n                        );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let peakIndex = first;\n                for (peakIndex; peakIndex < last; peakIndex += step) {\n\n                    // search for the highest peak in the range this bar falls into\n                    let peak = 0;\n                    let peakIndexRange = Math.floor(peakIndex * scale) * peakIndexScale; // start index\n                    const peakIndexEnd = Math.floor((peakIndex + step) * scale) * peakIndexScale;\n                    do { // do..while makes sure at least one peak is always evaluated\n                        const newPeak = Math.abs(peaks[peakIndexRange]); // for arrays starting with negative values\n                        if (newPeak > peak) {\n                            peak = newPeak; // higher\n                        }\n                        peakIndexRange += peakIndexScale; // skip every other value for negatives\n                    } while (peakIndexRange < peakIndexEnd);\n\n                    // calculate the height of this bar according to the highest peak found\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    // raise the bar height to the specified minimum height\n                    // Math.max is used to replace any value smaller than barMinHeight (not just 0) with barMinHeight\n                    if (this.params.barMinHeight) {\n                        h = Math.max(h, this.params.barMinHeight);\n                    }\n\n                    this.fillRect(\n                        peakIndex + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2,\n                        this.barRadius,\n                        ch\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius,\n                    channelIndex\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            this.applyCanvasTransforms(entry, this.params.vertical);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\n     */\n    fillRect(x, y, width, height, radius, channelIndex) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n                this.setFillStyles(entry, waveColor, progressColor);\n                this.applyCanvasTransforms(entry, this.params.vertical);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    }\n\n                    let overallAbsMax;\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\n                        // calculate maximum peak across channels to use for normalization\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\n                    }\n\n\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\n                    );\n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const halfH = height / 2;\n\n            let offsetY = height * drawIndex || 0;\n\n            // Override offsetY if overlay is true\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\n                offsetY = 0;\n            }\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Set the canvas transforms for a certain entry (wave and progress)\n     *\n     * @param {CanvasEntry} entry Target entry\n     * @param {boolean} vertical Whether to render the waveform vertically\n     */\n    applyCanvasTransforms(entry, vertical = false) {\n        entry.applyCanvasTransforms(vertical);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\n * of the webaudio API.\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @private\n     */\n    _load(media, peaks, preload) {\n        super._load(media, peaks, preload);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    play(start, end) {\n        this.resumeAudioContext();\n        return super.play(start, end);\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from \"./webaudio\";\nimport * as util from \"./util\";\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0,\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent(\"error\", \"Error loading media element\");\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent(\"canplay\");\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent(\"finish\");\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent(\"play\");\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent(\"pause\");\n        };\n        this.mediaListeners.seeked = (event) => {\n            this.fireEvent(\"seek\");\n        };\n        this.mediaListeners.volumechange = (event) => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent(\"volume\");\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach((id) => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent(\"audioprocess\", this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on(\"play\", onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on(\"pause\", () => {\n            this.fireEvent(\"audioprocess\", this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? \"auto\" : preload;\n        media.src = url;\n        media.style.width = \"100%\";\n        media.crossOrigin = \"anonymous\";\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks, preload);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks, elt.preload);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks, preload) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === \"undefined\"\n        ) {\n            throw new Error(\"media parameter is not a valid media element\");\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        //\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\n        // as this almost always triggers some browser fetch of the media.\n        if (typeof media.load == \"function\" && !(peaks && preload == \"none\")) {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null && !isNaN(start)) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = (time) => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on(\"audioprocess\", this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un(\"audioprocess\", this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error(\"setSinkId is not supported in your browser\")\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error(\"Invalid deviceId: \" + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @since 4.0.0\n     * @param {boolean} muted Specify `true` to mute audio.\n     */\n    setMute(muted) {\n        // This causes a volume change to be emitted too through the\n        // volumechange event listener.\n        this.isMuted = this.media.muted = muted;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach((id) => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\n * Returns a number limited to the given range.\n *\n * @param {number} val The number to be limited to a range\n * @param {number} min The lower boundary of the limit range\n * @param {number} max The upper boundary of the limit range\n * @returns {number} A number in the range [min, max]\n */\nexport default function clamp(val, min, max) {\n    return Math.min(Math.max(min, val), max);\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as absMax } from './absMax';\nexport { default as Observer } from './observer';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\nexport { default as clamp } from './clamp';\nexport { default as withOrientation } from './orientation';\nexport { default as ignoreSilenceMode } from './silence-mode';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * plugins borrow part of this class without calling the constructor,\n     * so we have to be careful about _disabledEventEmissions\n     */\n\n    _isDisabledEventEmission(event) {\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","const verticalPropMap = {\n    width: 'height',\n    height: 'width',\n\n    overflowX: 'overflowY',\n    overflowY: 'overflowX',\n\n    clientWidth: 'clientHeight',\n    clientHeight: 'clientWidth',\n\n    clientX: 'clientY',\n    clientY: 'clientX',\n\n    scrollWidth: 'scrollHeight',\n    scrollLeft: 'scrollTop',\n\n    offsetLeft: 'offsetTop',\n    offsetTop: 'offsetLeft',\n    offsetHeight: 'offsetWidth',\n    offsetWidth: 'offsetHeight',\n\n    left: 'top',\n    right: 'bottom',\n    top: 'left',\n    bottom: 'right',\n\n    borderRightStyle: 'borderBottomStyle',\n    borderRightWidth: 'borderBottomWidth',\n    borderRightColor: 'borderBottomColor'\n};\n\n/**\n * Convert a horizontally-oriented property name to a vertical one.\n *\n * @param {string} prop A property name\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {string} prop, converted appropriately\n */\nfunction mapProp(prop, vertical) {\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\n        return vertical ? verticalPropMap[prop] : prop;\n    } else {\n        return prop;\n    }\n}\n\nconst isProxy = Symbol(\"isProxy\");\n\n/**\n * Returns an appropriately oriented object based on vertical.\n * If vertical is true, attribute getting and setting will be mapped through\n * verticalPropMap, so that e.g. getting the object's .width will give its\n * .height instead.\n * Certain methods of an oriented object will return oriented objects as well.\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\n * and thus fail typechecks. Use domElement to get the actual element for this.\n *\n * @param {object} target The object to be wrapped and oriented\n * @param {bool} vertical Whether the element is oriented vertically\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\n * @since 5.0.0\n */\nexport default function withOrientation(target, vertical) {\n    if (target[isProxy]) {\n        return target;\n    } else {\n        return new Proxy(\n            target, {\n                get: function(obj, prop, receiver) {\n                    if (prop === isProxy) {\n                        return true;\n                    } else if (prop === 'domElement') {\n                        return obj;\n                    } else if (prop === 'style') {\n                        return withOrientation(obj.style, vertical);\n                    } else if (prop === 'canvas') {\n                        return withOrientation(obj.canvas, vertical);\n                    } else if (prop === 'getBoundingClientRect') {\n                        return function(...args) {\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\n                        };\n                    } else if (prop === 'getContext') {\n                        return function(...args) {\n                            return withOrientation(obj.getContext(...args), vertical);\n                        };\n                    } else {\n                        let value = obj[mapProp(prop, vertical)];\n                        return typeof value == 'function' ? value.bind(obj) : value;\n                    }\n                },\n                set: function(obj, prop, value) {\n                    obj[mapProp(prop, vertical)] = value;\n                    return true;\n                }\n            }\n        );\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Ignores device silence mode when using the `WebAudio` backend.\n *\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\n * when muting the device ringer.\n *\n * @since 5.2.0\n */\nexport default function ignoreSilenceMode() {\n    // Set the src to a short bit of url encoded as a silent mp3\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\n\n    // disable iOS Airplay (setting the attribute in js doesn't work)\n    let tmp = document.createElement(\"div\");\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\n\n    let audioSilentMode = tmp.children.item(0);\n    audioSilentMode.src = audioData;\n    audioSilentMode.preload = \"auto\";\n    audioSilentMode.type = \"audio/mpeg\";\n    audioSilentMode.disableRemotePlayback = true;\n\n    // play\n    audioSilentMode.play();\n\n    // cleanup\n    audioSilentMode.remove();\n    tmp.remove();\n}\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} hideCursor=false Whether to hide the mouse cursor\n * when one would normally be shown by default.\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\n * when using the `WebAudio` backend.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @typedef {Object} SplitChannelOptions\n * @desc parameters applied when splitChannels option is true\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\n * @property {object} channelColors={} object describing color for each channel. Example:\n * {\n *     0: {\n *         progressColor: 'green',\n *         waveColor: 'pink'\n *     },\n *     1: {\n *         progressColor: 'orange',\n *         waveColor: 'purple'\n *     }\n * }\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\n * @property {boolean} relativeNormalization=false determines whether\n * normalization is done per channel or maintains proportionality between\n * channels. Only applied when normalize and splitChannels are both true.\n * @property {boolean} splitDragSelection=false determines if drag selection in regions\n * plugin works separately on each channel or only one selection for all channels\n * @since 4.3.0\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        hideCursor: false,\n        ignoreSilenceMode: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n            relativeNormalization: false,\n            splitDragSelection: false\n        },\n        vertical: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n        this.params.splitChannelsOptions = Object.assign(\n            {},\n            this.defaultParams.splitChannelsOptions,\n            params.splitChannelsOptions\n        );\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            if (this.params.vertical === true) {\n                util.style(this.container, { transform: 'rotateX(180deg)' });\n            } else {\n                util.style(this.container, { transform: 'rotateY(180deg)' });\n            }\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    this.drawer.wrapper &&\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    if (prevWidth) {\n                        // redraw only if waveform container is rendered and has a width\n                        this.drawer.fireEvent('redraw');\n                    }\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        if (this.params.ignoreSilenceMode) {\n            // ignores device hardware silence mode\n            util.ignoreSilenceMode();\n        }\n\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\n        const paused = this.backend.isPaused();\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.pause();\n        }\n\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (isWebAudioBackend && !paused) {\n            this.backend.play();\n        }\n\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (this.backend.setMute) {\n            // Backends such as the MediaElement backend have their own handling\n            // of mute, let them handle it.\n            this.backend.setMute(mute);\n            this.isMuted = mute;\n        } else {\n            if (mute) {\n                // If currently not muted then save current volume,\n                // turn off the volume and update the mute properties\n                this.savedVolume = this.backend.getVolume();\n                this.backend.setVolume(0);\n                this.isMuted = true;\n                this.fireEvent('volume', 0);\n            } else {\n                // If currently muted then restore to the saved volume\n                // and update the mute properties\n                this.backend.setVolume(this.savedVolume);\n                this.isMuted = false;\n                this.fireEvent('volume', this.savedVolume);\n            }\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its wave color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getWaveColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\n        }\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its wave color if splitChannels is true\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color, channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\n        } else {\n            this.params.waveColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @param {?number} channelIdx Optional index of the channel to get its progress color if splitChannels is true\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\n     */\n    getProgressColor(channelIdx = null) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\n        }\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\n     * @param {?number} channelIdx Optional index of the channel to set its progress color if splitChannels is true\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color, channelIdx) {\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\n            this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\n        } else {\n            this.params.progressColor = color;\n        }\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     *\n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     *\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        // loadBuffer(url, peaks, duration) requires that url is a string\n        // but users can pass in a HTMLMediaElement to WaveSurfer\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\n            url = url.src;\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @emits WaveSurfer#waveform-ready\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If peaks are provided, render them and fire the `waveform-ready` event.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.fireEvent('waveform-ready');\n        }\n\n        // If no pre-decoded peaks are provided, or are provided with\n        // forceDecode flag, attempt to download the audio file and decode it\n        // with Web Audio.\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        if (!this.isDestroyed) {\n            this.arraybuffer = arraybuffer;\n            this.backend.decodeArrayBuffer(\n                arraybuffer,\n                data => {\n                    // Only use the decoded data if we haven't been destroyed or\n                    // another decode started in the meantime\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                        callback(data);\n                        this.arraybuffer = null;\n                    }\n                },\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\n            );\n        }\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and optionally opens in a new window\n     * as valid JSON Blob instance.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n\n        return new Promise((resolve, reject) => {\n            if (!noWindow){\n                const blobJSON = new Blob(\n                    [JSON.stringify(arr)],\n                    {type: 'application/json;charset=utf-8'}\n                );\n                const objURL = URL.createObjectURL(blobJSON);\n                window.open(objURL);\n                URL.revokeObjectURL(objURL);\n            }\n            resolve(arr);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `image/png`. Other supported types are\n     * `image/jpeg` and `image/webp`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `image/png`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `image/jpeg` and `image/webp`.\n     * @param {string} type Image data type to return. Either `dataURL` (default)\n     * or `blob`.\n     * @return {string|string[]|Promise} When using `dataURL` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `blob` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\n            // See: Wavesurfer issue #2042\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\n            if (this.currentRequest._reader) {\n                // Ignoring exceptions thrown by call to cancel()\n                this.currentRequest._reader.cancel().catch(err => {});\n            }\n\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n            // clears memory usage\n            this.backend = null;\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** scriptBufferSize: size of the processing buffer */\n    static scriptBufferSize = 256;\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /** @private */\n        this.sinkStreamDestination = null;\n        /** @private */\n        this.sinkAudioElement = null;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            if (!this.sinkAudioElement) {\n                this.sinkAudioElement = new window.Audio();\n                // autoplay is necessary since we're not invoking .play()\n                this.sinkAudioElement.autoplay = true;\n            }\n            if (!this.sinkAudioElement.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            if (!this.sinkStreamDestination) {\n                this.sinkStreamDestination = this.ac.createMediaStreamDestination();\n            }\n            this.gainNode.disconnect();\n            this.gainNode.connect(this.sinkStreamDestination);\n            this.sinkAudioElement.srcObject = this.sinkStreamDestination.stream;\n\n            return this.sinkAudioElement.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        if ('webkitAudioContext' in window) {\n            // Safari: no support for Promise-based decodeAudioData enabled\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\n            this.offlineAc.decodeAudioData(\n                arraybuffer,\n                data => callback(data),\n                errback\n            );\n        } else {\n            this.offlineAc.decodeAudioData(arraybuffer).then(\n                (data) => callback(data)\n            ).catch(\n                (err) => errback(err)\n            );\n        }\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n\n        // disconnect resources used by setSinkId\n        if (this.sinkStreamDestination) {\n            this.sinkAudioElement.pause();\n            this.sinkAudioElement.srcObject = null;\n            this.sinkStreamDestination.disconnect();\n            this.sinkStreamDestination = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.setPlaybackRate(this.playbackRate);\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * @private\n     *\n     * some browsers require an explicit call to #resume before they will play back audio\n     */\n    resumeAudioContext() {\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        this.resumeAudioContext();\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        try {\n            this.source && this.source.stop(0);\n        } catch (err) {\n            // Calling stop can throw the following 2 errors:\n            // - RangeError (The value specified for when is negative.)\n            // - InvalidStateNode (The node has not been started by calling start().)\n            // We can safely ignore both errors, because:\n            // - The range is surely correct\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\n        }\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.source && this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/wavesurfer.js\");\n",""],"names":["_style","_interopRequireDefault","require","_getId","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","getId","name","toLowerCase","canvasContextAttributes","value","initWave","element","getContext","initProgress","updateDimensions","elementWidth","totalWidth","width","height","offsetLeft","elementSize","style","hasProgressCanvas","clearWave","clearRect","canvas","setFillStyles","waveColor","progressColor","fillStyle","getFillStyle","ctx","color","CanvasGradient","waveGradient","createLinearGradient","forEach","index","addColorStop","applyCanvasTransforms","vertical","setTransform","fillRects","x","y","radius","fillRectToContext","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","drawLines","peaks","absmax","halfH","offsetY","drawLineToContext","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","peak","h","halfPixel","j","destroy","getImage","format","quality","type","_this","Promise","resolve","toBlob","toDataURL","exports","module","util","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","hasOwnProperty","desc","set","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","Drawer","_util$Observer","_super","container","params","withOrientation","pixelRatio","lastPos","wrapper","el","styles","createWrapper","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","cursor","hideCursor","overflowX","hideScrollbar","overflowY","setupWrapperEvents","handleEvent","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","_this2","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","drawPeaks","setWidth","barWidth","drawBars","drawWave","resetScroll","recenter","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","offset","rate","autoCenterRate","max","min","getScrollX","newWidth","updateSize","setHeight","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","updateCursor","channelIndex","Observer","_drawer","_drawer2","MultiCanvas","_Drawer","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","init","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","entry","leftOffset","push","lastEntry","parentElement","pop","_this3","frame","_this4","prepareDraw","_ref","hasMinVals","ch","peakIndexScale","bar","gap","barGap","step","peakIndex","peakIndexRange","floor","peakIndexEnd","newPeak","abs","barMinHeight","_this5","_ref2","reflectedPeaks","len","drawLine","_this6","_ref3","splitChannelsOptions","channelColors","startCanvas","endCanvas","intersection","x1","y1","x2","y2","_ref4","hideChannel","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","_this7","Array","channels","filteredChannels","filter","c","overlay","overallAbsMax","relativeNormalization","map","channelPeaks","absMax","indexOf","barHeight","normalize","some","val","all","images","_mediaelement","_get","property","receiver","base","_superPropBase","object","MediaElementWebAudio","_MediaElement","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","_load","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","play","resumeAudioContext","destroyWebAudio","MediaElement","_webaudio","_WebAudio","currentTime","duration","paused","playbackRate","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","_setupMediaListeners","error","canplay","ended","seeked","event","volumechange","muted","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","load","url","controls","mediaControls","autoplay","src","crossOrigin","prevMedia","querySelector","loadElt","elt","HTMLMediaElement","Error","setVolume","getDuration","explicitDuration","Infinity","seekable","getPlayedPercents","getPlaybackRate","seekTo","isNaN","clearPlayEnd","promise","setPlayEnd","_onPlayEnd","time","un","getPeaks","setSinkId","deviceId","reject","getVolume","setMute","destroyed","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","addRangeToPeakCache","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","getCacheRanges","peakCacheRangePairs","_max","_min","values","utilMax","utilmin","_observer","ProgressHandler","contentLength","response","_reader","body","getReader","total","parseInt","loaded","controller","read","then","done","onProgress","lengthComputable","close","byteLength","enqueue","catch","fetchFile","options","fetchHeaders","Headers","fetchRequest","Request","AbortController","requestHeaders","header","append","responseType","fetchOptions","method","headers","mode","credentials","redirect","referrer","signal","fetch","progressAvailable","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","status","_requestAnimationFrame","func","_len","args","_key","reqAnimationFrame","prefix","random","toString","substring","_absMax","_frame","_debounce","_preventClick","_fetch","_clamp","_orientation","_silenceMode","largest","smallest","_disabledEventEmissions","handlers","callback","splice","once","handler","setTimeout","setDisabledEventEmissions","eventNames","_isDisabledEventEmission","_len2","_key2","verticalPropMap","offsetTop","offsetWidth","mapProp","prop","isProxy","preventClickHandler","stopPropagation","preventClick","_default","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","ignoreSilenceMode","audioData","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","remove","_peakcache","_mediaelementWebaudio","_defineProperty","PluginClass","ws","WaveSurfer","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","splitDragSelection","xhr","assign","defaultParams","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","supportsWebAudio","Backend","backends","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","getActivePlugins","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","destroyAllPlugins","drawBuffer","newVolume","setCurrentTime","seconds","playPause","isPlaying","skipBackward","skip","skipForward","seekAndCenter","_this8","isFinite","isWebAudioBackend","oldScrollParent","stop","toggleMute","mute","getMute","getFilters","filters","toggleScroll","toggleInteraction","getWaveColor","channelIdx","setWaveColor","getProgressColor","setProgressColor","getBackgroundColor","background","getCursorColor","setCursorColor","getHeight","setFilteredChannels","channelIndices","newRanges","zoom","pxPerSec","loadArrayBuffer","_this9","decodeArrayBuffer","data","loadDecodedBuffer","loadBlob","_this10","reader","FileReader","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","_this11","action","getArrayBuffer","setPeaks","urlOrElt","_this12","err","_this13","_this14","request","percentComplete","exportPCM","accuracy","noWindow","blobJSON","Blob","JSON","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","exportImage","cancelAjax","cancel","abort","clearTmpEvents","disconnectSource","wavesurfer","__VERSION__","PLAYING","PAUSED","FINISHED","_defineProperty2","_this$states","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","stateBehaviors","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","sinkStreamDestination","sinkAudioElement","AudioContext","webkitAudioContext","WaveSurferAudioContext","getOfflineAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","setState","setLength","disconnectFilters","disconnect","setFilter","setFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","Audio","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","resume","adjustedTime"],"sourceRoot":""}